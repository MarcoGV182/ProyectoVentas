// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaFacturacion_API.Datos;

#nullable disable

namespace SistemaFacturacion_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231110000407_CrearTablaPersonaColaboradorUsuario")]
    partial class CrearTablaPersonaColaboradorUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Articulo", b =>
                {
                    b.Property<int>("Articulonro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Id de la tabla");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Articulonro"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Estado del Producto,Servicio");

                    b.Property<DateTime?>("Fecharegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Fechaultactualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observacion")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.Property<int?>("Tipoarticulo")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoimpuestoId")
                        .HasColumnType("integer");

                    b.Property<short?>("UnidadMedidaId")
                        .HasColumnType("smallint");

                    b.HasKey("Articulonro");

                    b.HasIndex("TipoimpuestoId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("Articulo", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Marca", b =>
                {
                    b.Property<int>("Marcanro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Marcanro"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("Marcanro");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("Fechanacimiento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Fecharegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nrodocumento")
                        .HasColumnType("text");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Ultfechaactualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("PersonaId");

                    b.ToTable("Persona", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Presentacion", b =>
                {
                    b.Property<int>("Idpresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idpresentacion"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Idpresentacion");

                    b.ToTable("Presentacion");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.TipoImpuesto", b =>
                {
                    b.Property<int>("TipoimpuestoNro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TipoimpuestoNro"));

                    b.Property<double>("Baseimponible")
                        .HasColumnType("double precision");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Porcentajeiva")
                        .HasColumnType("double precision");

                    b.HasKey("TipoimpuestoNro");

                    b.ToTable("TipoImpuesto");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.TipoProducto", b =>
                {
                    b.Property<short>("Tiporoductonro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Tiporoductonro"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("Tiporoductonro");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Ubicacion", b =>
                {
                    b.Property<int>("UbicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UbicacionId"));

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UbicacionId");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.UnidadMedida", b =>
                {
                    b.Property<short>("Unidadmedidanro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Unidadmedidanro"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("Unidadmedidanro");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Fechaalta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Fechabaja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenidad")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ImagenURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("MetrosCuadratos")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("integer");

                    b.Property<double>("Tarifa")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Villas");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Producto", b =>
                {
                    b.HasBaseType("SistemaFacturacion_API.Modelos.Articulo");

                    b.Property<string>("Codigobarra")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateOnly?>("Fechavencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("integer");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("double precision");

                    b.Property<int?>("PresentacionId")
                        .HasColumnType("integer");

                    b.Property<int>("Stockactual")
                        .HasColumnType("integer");

                    b.Property<int?>("Stockminimo")
                        .HasColumnType("integer");

                    b.Property<short?>("TipoproductoId")
                        .HasColumnType("smallint");

                    b.Property<short?>("Unidadmedidanro")
                        .HasColumnType("smallint");

                    b.HasIndex("MarcaId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("TipoproductoId");

                    b.HasIndex("Unidadmedidanro");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Colaborador", b =>
                {
                    b.HasBaseType("SistemaFacturacion_API.Modelos.Persona");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("Fechaegreso")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Fechaingreso")
                        .HasColumnType("date");

                    b.Property<double?>("Salario")
                        .HasColumnType("double precision");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Colaborador", (string)null);
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Articulo", b =>
                {
                    b.HasOne("SistemaFacturacion_API.Modelos.TipoImpuesto", "TipoImpuesto")
                        .WithMany()
                        .HasForeignKey("TipoimpuestoId");

                    b.HasOne("SistemaFacturacion_API.Modelos.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId");

                    b.Navigation("TipoImpuesto");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Stock", b =>
                {
                    b.HasOne("SistemaFacturacion_API.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_API.Modelos.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Producto", b =>
                {
                    b.HasOne("SistemaFacturacion_API.Modelos.Articulo", null)
                        .WithOne()
                        .HasForeignKey("SistemaFacturacion_API.Modelos.Producto", "Articulonro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_API.Modelos.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId");

                    b.HasOne("SistemaFacturacion_API.Modelos.Presentacion", "Presentacion")
                        .WithMany("Productos")
                        .HasForeignKey("PresentacionId");

                    b.HasOne("SistemaFacturacion_API.Modelos.TipoProducto", "TipoProducto")
                        .WithMany()
                        .HasForeignKey("TipoproductoId");

                    b.HasOne("SistemaFacturacion_API.Modelos.UnidadMedida", null)
                        .WithMany("Productos")
                        .HasForeignKey("Unidadmedidanro");

                    b.Navigation("Marca");

                    b.Navigation("Presentacion");

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Colaborador", b =>
                {
                    b.HasOne("SistemaFacturacion_API.Modelos.Persona", null)
                        .WithOne()
                        .HasForeignKey("SistemaFacturacion_API.Modelos.Colaborador", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_API.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.Presentacion", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaFacturacion_API.Modelos.UnidadMedida", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
