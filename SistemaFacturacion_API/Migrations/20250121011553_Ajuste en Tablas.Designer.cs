// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaFacturacion_API.Datos;

#nullable disable

namespace SistemaFacturacion_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250121011553_Ajuste en Tablas")]
    partial class AjusteenTablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Articulo", b =>
                {
                    b.Property<int>("ArticuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArticuloId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Fecharegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Fechaultactualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observacion")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoArticulo")
                        .HasColumnType("integer");

                    b.Property<short?>("TipoimpuestoId")
                        .HasColumnType("smallint");

                    b.HasKey("ArticuloId");

                    b.HasIndex("TipoimpuestoId");

                    b.ToTable("articulo");

                    b.HasDiscriminator<int>("TipoArticulo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.CategoriaProducto", b =>
                {
                    b.Property<short>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("CategoriaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("CategoriaId");

                    b.ToTable("categoriaproduto");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Ciudad", b =>
                {
                    b.Property<short>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("CiudadId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("CiudadId");

                    b.ToTable("ciudad");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Colaborador", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColaboradorId"));

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("Fechaegreso")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Fechaingreso")
                        .HasColumnType("date");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Salario")
                        .HasColumnType("numeric");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("PersonaId");

                    b.ToTable("colaborador");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Articulonro")
                        .HasColumnType("integer");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ImporteExento")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ImporteGravado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ImporteIVA")
                        .HasColumnType("numeric");

                    b.Property<int>("NroItem")
                        .HasColumnType("integer");

                    b.Property<int>("NroVenta")
                        .HasColumnType("integer");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.Property<short?>("TipoimpuestoNro")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("IdDetalle");

                    b.HasIndex("Articulonro");

                    b.HasIndex("NroVenta");

                    b.HasIndex("TipoimpuestoNro");

                    b.ToTable("detalleventa");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Empresa", b =>
                {
                    b.Property<short>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("EmpresaId"));

                    b.Property<string>("Denominacion")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("bytea");

                    b.Property<string>("RUC")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("EmpresaId");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.HistorialRefreshToken", b =>
                {
                    b.Property<int>("HistorialTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistorialTokenId"));

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("boolean")
                        .HasComputedColumnSql("(FechaExpiracion >= CURRENT_DATE)", true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<short>("UsuarioId")
                        .HasColumnType("smallint");

                    b.HasKey("HistorialTokenId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("historialesrefreshtokens");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MarcaId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("MarcaId");

                    b.ToTable("marca");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("permiso");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.RolPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("PermisoId")
                        .HasColumnType("integer");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("rolpermiso");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", b =>
                {
                    b.Property<short>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("UsuarioId"));

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Fechaalta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Fechabaja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("RolId");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Fecharegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short?>("IdCiudad")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdTipoDocIdentidad")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdUsuario")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdUsuarioMod")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nrodocumento")
                        .HasColumnType("text");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Ultfechaactualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("PersonaId");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdTipoDocIdentidad");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdUsuarioMod");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.PrecioPromocional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PrecioPromocion")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.ToTable("preciopromocional");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Presentacion", b =>
                {
                    b.Property<short>("PresentacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("PresentacionId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PresentacionId");

                    b.ToTable("presentacion");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Timbrado", b =>
                {
                    b.Property<short>("TimbradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("TimbradoId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime>("FechaFinVigencia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaInicioVigencia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("TipoTimbrado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("TimbradoId");

                    b.ToTable("timbrado");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.TipoDocumentoIdentidad", b =>
                {
                    b.Property<short>("TipoDocIdentidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("TipoDocIdentidadId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("TipoDocIdentidadId");

                    b.ToTable("tipodocumentoidentidad");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.TipoImpuesto", b =>
                {
                    b.Property<short>("TipoimpuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("TipoimpuestoId"));

                    b.Property<double>("Baseimponible")
                        .HasColumnType("double precision");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Porcentajeiva")
                        .HasColumnType("double precision");

                    b.HasKey("TipoimpuestoId");

                    b.ToTable("tipoimpuesto");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.TipoServicio", b =>
                {
                    b.Property<short>("TipoServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("TipoServicoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("TipoServicoId");

                    b.ToTable("tiposervicio");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Ubicacion", b =>
                {
                    b.Property<int>("UbicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UbicacionId"));

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UbicacionId");

                    b.ToTable("ubicacion");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.UnidadMedida", b =>
                {
                    b.Property<short>("UnidadMedidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("UnidadMedidaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("UnidadMedidaId");

                    b.ToTable("unidadmedida");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("integer");

                    b.Property<short>("EmpresaId")
                        .HasColumnType("smallint");

                    b.Property<string>("EsAutoimprenta")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<short>("Establecimiento")
                        .HasColumnType("smallint");

                    b.Property<string>("Estado")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NroFactura")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<short>("PuntoExpedicion")
                        .HasColumnType("smallint");

                    b.Property<short>("TimbradoId")
                        .HasColumnType("smallint");

                    b.Property<short?>("UsuarioIdAnulacion")
                        .HasColumnType("smallint");

                    b.Property<short?>("UsuarioIdModificacion")
                        .HasColumnType("smallint");

                    b.Property<short>("UsuarioIdRegistro")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TimbradoId");

                    b.HasIndex("UsuarioIdAnulacion");

                    b.HasIndex("UsuarioIdModificacion");

                    b.HasIndex("UsuarioIdRegistro");

                    b.ToTable("venta");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Producto", b =>
                {
                    b.HasBaseType("SistemaFacturacion_Model.Modelos.Articulo");

                    b.Property<short?>("CategoriaId")
                        .HasColumnType("smallint");

                    b.Property<string>("Codigobarra")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short?>("Idpresentacion")
                        .HasColumnType("smallint");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("numeric");

                    b.Property<int>("Stockactual")
                        .HasColumnType("integer");

                    b.Property<int>("Stockminimo")
                        .HasColumnType("integer");

                    b.Property<short?>("Unidadmedidanro")
                        .HasColumnType("smallint");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Idpresentacion");

                    b.HasIndex("MarcaId");

                    b.HasIndex("Unidadmedidanro");

                    b.ToTable("articulo");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Servicio", b =>
                {
                    b.HasBaseType("SistemaFacturacion_Model.Modelos.Articulo");

                    b.Property<short>("TipoServicoNro")
                        .HasColumnType("smallint");

                    b.HasIndex("TipoServicoNro");

                    b.ToTable("articulo");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Articulo", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.TipoImpuesto", "TipoImpuesto")
                        .WithMany()
                        .HasForeignKey("TipoimpuestoId");

                    b.Navigation("TipoImpuesto");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Colaborador", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.DetalleVenta", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("Articulonro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.Venta", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("NroVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.TipoImpuesto", "TipoImpuesto")
                        .WithMany()
                        .HasForeignKey("TipoimpuestoNro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("TipoImpuesto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.HistorialRefreshToken", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.RolPermiso", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("Colaborador");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Persona", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("IdCiudad");

                    b.HasOne("SistemaFacturacion_Model.Modelos.TipoDocumentoIdentidad", "TipoDocumentoIdentidad")
                        .WithMany()
                        .HasForeignKey("IdTipoDocIdentidad");

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", "UsuarioModificacion")
                        .WithMany()
                        .HasForeignKey("IdUsuarioMod");

                    b.Navigation("Ciudad");

                    b.Navigation("TipoDocumentoIdentidad");

                    b.Navigation("UsuarioModificacion");

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.PrecioPromocional", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Articulo", "Articulo")
                        .WithMany("PreciosPromocionales")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Stock", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Venta", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.Persona", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.Colaborador", "Vendedor")
                        .WithMany()
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.Timbrado", "Timbrado")
                        .WithMany()
                        .HasForeignKey("TimbradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", "UsuarioAnulacion")
                        .WithMany()
                        .HasForeignKey("UsuarioIdAnulacion");

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", "UsuarioModificacion")
                        .WithMany()
                        .HasForeignKey("UsuarioIdModificacion");

                    b.HasOne("SistemaFacturacion_Model.Modelos.ModelUsuario.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("UsuarioIdRegistro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Timbrado");

                    b.Navigation("UsuarioAnulacion");

                    b.Navigation("UsuarioModificacion");

                    b.Navigation("UsuarioRegistro");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Producto", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.CategoriaProducto", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("SistemaFacturacion_Model.Modelos.Presentacion", "Presentacion")
                        .WithMany("Productos")
                        .HasForeignKey("Idpresentacion");

                    b.HasOne("SistemaFacturacion_Model.Modelos.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("SistemaFacturacion_Model.Modelos.UnidadMedida", "UnidadMedida")
                        .WithMany("Productos")
                        .HasForeignKey("Unidadmedidanro");

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Presentacion");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Servicio", b =>
                {
                    b.HasOne("SistemaFacturacion_Model.Modelos.TipoServicio", "TipoServicio")
                        .WithMany()
                        .HasForeignKey("TipoServicoNro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Articulo", b =>
                {
                    b.Navigation("PreciosPromocionales");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.ModelUsuario.Rol", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Presentacion", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.UnidadMedida", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaFacturacion_Model.Modelos.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
