@inject IMarcaService _marcaService
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">
    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">

            <EditForm Model="@_marca">

                <MudTextField @bind-Value="@_marca.Descripcion" Class="mb-3"
                              Label="Descripcion" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Badge" />

            </EditForm>
        </MudContainer>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="@Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@Guardar">Guardar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public MarcaDTO _marca { get; set; } = new MarcaDTO();

    bool isShow;   
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(_marca.Marcanro);
    }

    void MostrarClave()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
    private void Cancel()
    {
        Console.WriteLine("Cancelar presionado");
        MudDialog.Cancel();
    }

    private async Task Guardar()
    {
        MarcaCreateDTO _nuevaMarca = new MarcaCreateDTO();
        _nuevaMarca.Descripcion = _marca.Descripcion;
        string _mensaje = "";
        bool _resultado;

        if (_marca.Marcanro != 0)
        {
            var response = await _marcaService.Actualizar<MarcaDTO>(_marca);
            _resultado = response.isExitoso;
            _mensaje = "La Marca fue modificada";
        }
        else
        {
            var response = await _marcaService.Crear<MarcaDTO>(_nuevaMarca);
            _resultado = response.isExitoso;
            _mensaje = "Marca creada";
        }

        if (_resultado)
        {
            _snackBar.Add(_mensaje, Severity.Success, a => a.VisibleStateDuration = 500);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
            _snackBar.Add("Error al guardar cambios", Severity.Error, a => a.VisibleStateDuration = 500);

    }
}
