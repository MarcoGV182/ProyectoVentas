// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaFacturacionWeb.Datos;

#nullable disable

namespace SistemaFacturacionWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231107115206_CrearTablaArticuloProductoTipoImpuesto")]
    partial class CrearTablaArticuloProductoTipoImpuesto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaFacturacionWeb.Modelos.Articulo", b =>
                {
                    b.Property<int>("Articulonro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Id de la tabla");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Articulonro"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Estado del Producto,Servicio");

                    b.Property<DateTime>("Fecharegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Fechaultactualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observacion")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.Property<int>("Tipoarticulo")
                        .HasColumnType("integer");

                    b.Property<int>("TipoimpuestoNro")
                        .HasColumnType("integer");

                    b.HasKey("Articulonro");

                    b.HasIndex("TipoimpuestoNro");

                    b.ToTable("Articulo", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SistemaFacturacionWeb.Modelos.TipoImpuesto", b =>
                {
                    b.Property<int>("TipoimpuestoNro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TipoimpuestoNro"));

                    b.Property<double>("Baseimponible")
                        .HasColumnType("double precision");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Porcentajeiva")
                        .HasColumnType("double precision");

                    b.HasKey("TipoimpuestoNro");

                    b.ToTable("TipoImpuesto");
                });

            modelBuilder.Entity("SistemaFacturacionWeb.Modelos.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenidad")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ImagenURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("MetrosCuadratos")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("integer");

                    b.Property<double>("Tarifa")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Villas");
                });

            modelBuilder.Entity("SistemaFacturacionWeb.Modelos.Producto", b =>
                {
                    b.HasBaseType("SistemaFacturacionWeb.Modelos.Articulo");

                    b.Property<string>("Codigobarra")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateOnly?>("Fechavencimiento")
                        .HasColumnType("date");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("double precision");

                    b.Property<int>("Stockactual")
                        .HasColumnType("integer");

                    b.Property<int?>("Stockminimo")
                        .HasColumnType("integer");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("SistemaFacturacionWeb.Modelos.Articulo", b =>
                {
                    b.HasOne("SistemaFacturacionWeb.Modelos.TipoImpuesto", "TipoImpuesto")
                        .WithMany()
                        .HasForeignKey("TipoimpuestoNro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoImpuesto");
                });

            modelBuilder.Entity("SistemaFacturacionWeb.Modelos.Producto", b =>
                {
                    b.HasOne("SistemaFacturacionWeb.Modelos.Articulo", null)
                        .WithOne()
                        .HasForeignKey("SistemaFacturacionWeb.Modelos.Producto", "Articulonro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
